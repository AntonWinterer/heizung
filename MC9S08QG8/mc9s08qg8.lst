*** EVALUATION ***
ANSI-C/cC++ Compiler for HC08 V-5.0.33 Build 10132, May 13 2010

    1:  /* Based on CPU DB MC9S08QG8_24, version 3.00.009 (RegistersPrg V2.28) */
    2:  /* DataSheet : MC9S08QG8 Rev. 4 2/2008 */
    3:  
    4:  #include <mc9s08qg8.h>
    5:  
    6:  /*lint -save -esym(765, *) */
    7:  
    8:  
    9:  /* * * * *  8-BIT REGISTERS  * * * * * * * * * * * * * * * */
   10:  volatile PTADSTR _PTAD;                                    /* Port A Data Register; 0x00000000 */
   11:  volatile PTADDSTR _PTADD;                                  /* Port A Data Direction Register; 0x00000001 */
   12:  volatile PTBDSTR _PTBD;                                    /* Port B Data Register; 0x00000002 */
   13:  volatile PTBDDSTR _PTBDD;                                  /* Port B Data Direction Register; 0x00000003 */
   14:  volatile KBISCSTR _KBISC;                                  /* KBI Status and Control Register; 0x0000000C */
   15:  volatile KBIPESTR _KBIPE;                                  /* KBI Pin Enable Register; 0x0000000D */
   16:  volatile KBIESSTR _KBIES;                                  /* KBI Edge Select Register; 0x0000000E */
   17:  volatile IRQSCSTR _IRQSC;                                  /* Interrupt request status and control register; 0x0000000F */
   18:  volatile ADCSC1STR _ADCSC1;                                /* Status and Control Register 1; 0x00000010 */
   19:  volatile ADCSC2STR _ADCSC2;                                /* Status and Control Register 2; 0x00000011 */
   20:  volatile ADCCFGSTR _ADCCFG;                                /* Configuration Register; 0x00000016 */
   21:  volatile APCTL1STR _APCTL1;                                /* Pin Control 1 Register; 0x00000017 */
   22:  volatile ACMPSCSTR _ACMPSC;                                /* ACMP Status and Control Register; 0x0000001A */
   23:  volatile SCIC1STR _SCIC1;                                  /* SCI Control Register 1; 0x00000022 */
   24:  volatile SCIC2STR _SCIC2;                                  /* SCI Control Register 2; 0x00000023 */
   25:  volatile SCIS1STR _SCIS1;                                  /* SCI Status Register 1; 0x00000024 */
   26:  volatile SCIS2STR _SCIS2;                                  /* SCI Status Register 2; 0x00000025 */
   27:  volatile SCIC3STR _SCIC3;                                  /* SCI Control Register 3; 0x00000026 */
   28:  volatile SCIDSTR _SCID;                                    /* SCI Data Register; 0x00000027 */
   29:  volatile SPIC1STR _SPIC1;                                  /* SPI Control Register 1; 0x00000028 */
   30:  volatile SPIC2STR _SPIC2;                                  /* SPI Control Register 2; 0x00000029 */
   31:  volatile SPIBRSTR _SPIBR;                                  /* SPI Baud Rate Register; 0x0000002A */
   32:  volatile SPISSTR _SPIS;                                    /* SPI Status Register; 0x0000002B */
   33:  volatile SPIDSTR _SPID;                                    /* SPI Data Register; 0x0000002D */
   34:  volatile IICASTR _IICA;                                    /* IIC Address Register; 0x00000030 */
   35:  volatile IICFSTR _IICF;                                    /* IIC Frequency Divider Register; 0x00000031 */
   36:  volatile IICCSTR _IICC;                                    /* IIC Control Register; 0x00000032 */
   37:  volatile IICSSTR _IICS;                                    /* IIC Status Register; 0x00000033 */
   38:  volatile IICDSTR _IICD;                                    /* IIC Data I/O Register; 0x00000034 */
   39:  volatile ICSC1STR _ICSC1;                                  /* ICS Control Register 1; 0x00000038 */
   40:  volatile ICSC2STR _ICSC2;                                  /* ICS Control Register 2; 0x00000039 */
   41:  volatile ICSTRMSTR _ICSTRM;                                /* ICS Trim Register; 0x0000003A */
   42:  volatile ICSSCSTR _ICSSC;                                  /* ICS Status and Control Register; 0x0000003B */
   43:  volatile MTIMSCSTR _MTIMSC;                                /* MTIM Clock Configuration Register; 0x0000003C */
   44:  volatile MTIMCLKSTR _MTIMCLK;                              /* MTIM Clock Configuration Register; 0x0000003D */
   45:  volatile MTIMCNTSTR _MTIMCNT;                              /* MTIM Counter Register; 0x0000003E */
   46:  volatile MTIMMODSTR _MTIMMOD;                              /* MTIM Modulo Register; 0x0000003F */
   47:  volatile TPMSCSTR _TPMSC;                                  /* TPM Status and Control Register; 0x00000040 */
   48:  volatile TPMC0SCSTR _TPMC0SC;                              /* TPM Timer Channel 0 Status and Control Register; 0x00000045 */
   49:  volatile TPMC1SCSTR _TPMC1SC;                              /* TPM Timer Channel 1 Status and Control Register; 0x00000048 */
   50:  volatile SRSSTR _SRS;                                      /* System Reset Status Register; 0x00001800 */
   51:  volatile SBDFRSTR _SBDFR;                                  /* System Background Debug Force Reset Register; 0x00001801 */
   52:  volatile SOPT1STR _SOPT1;                                  /* System Options Register 1; 0x00001802 */
   53:  volatile SOPT2STR _SOPT2;                                  /* System Options Register 2; 0x00001803 */
   54:  volatile SRTISCSTR _SRTISC;                                /* System Real-Time Interrupt Status and Control Register; 0x00001808 */
   55:  volatile SPMSC1STR _SPMSC1;                                /* System Power Management Status and Control 1 Register; 0x00001809 */
   56:  volatile SPMSC2STR _SPMSC2;                                /* System Power Management Status and Control 2 Register; 0x0000180A */
   57:  volatile SPMSC3STR _SPMSC3;                                /* System Power Management Status and Control 3 Register; 0x0000180C */
   58:  volatile DBGCSTR _DBGC;                                    /* Debug Control Register; 0x00001816 */
   59:  volatile DBGTSTR _DBGT;                                    /* Debug Trigger Register; 0x00001817 */
   60:  volatile DBGSSTR _DBGS;                                    /* Debug Status Register; 0x00001818 */
   61:  volatile FCDIVSTR _FCDIV;                                  /* FLASH Clock Divider Register; 0x00001820 */
   62:  volatile FOPTSTR _FOPT;                                    /* FLASH Options Register; 0x00001821 */
   63:  volatile FCNFGSTR _FCNFG;                                  /* FLASH Configuration Register; 0x00001823 */
   64:  volatile FPROTSTR _FPROT;                                  /* FLASH Protection Register; 0x00001824 */
   65:  volatile FSTATSTR _FSTAT;                                  /* Flash Status Register; 0x00001825 */
   66:  volatile FCMDSTR _FCMD;                                    /* FLASH Command Register; 0x00001826 */
   67:  volatile PTAPESTR _PTAPE;                                  /* Port A Pull Enable Register; 0x00001840 */
   68:  volatile PTASESTR _PTASE;                                  /* Port A Slew Rate Enable Register; 0x00001841 */
   69:  volatile PTADSSTR _PTADS;                                  /* Port A Drive Strength Selection Register; 0x00001842 */
   70:  volatile PTBPESTR _PTBPE;                                  /* Port B Pull Enable Register; 0x00001844 */
   71:  volatile PTBSESTR _PTBSE;                                  /* Port B Slew Rate Enable Register; 0x00001845 */
   72:  volatile PTBDSSTR _PTBDS;                                  /* Port B Drive Strength Selection Register; 0x00001846 */
   73:  /* NVFTRIM - macro for reading non volatile register       Nonvolatile ICS Fine Trim; 0x0000FFAE */
   74:  /* Tip for register initialization in the user code:  const byte NVFTRIM_INIT @0x0000FFAE = <NVFTRIM_INITVAL>; */
   75:  /* NVICSTRM - macro for reading non volatile register      Nonvolatile ICS Trim Register; 0x0000FFAF */
   76:  /* Tip for register initialization in the user code:  const byte NVICSTRM_INIT @0x0000FFAF = <NVICSTRM_INITVAL>; */
   77:  /* NVBACKKEY0 - macro for reading non volatile register    Backdoor Comparison Key 0; 0x0000FFB0 */
   78:  /* Tip for register initialization in the user code:  const byte NVBACKKEY0_INIT @0x0000FFB0 = <NVBACKKEY0_INITVAL>; */
   79:  /* NVBACKKEY1 - macro for reading non volatile register    Backdoor Comparison Key 1; 0x0000FFB1 */
   80:  /* Tip for register initialization in the user code:  const byte NVBACKKEY1_INIT @0x0000FFB1 = <NVBACKKEY1_INITVAL>; */
   81:  /* NVBACKKEY2 - macro for reading non volatile register    Backdoor Comparison Key 2; 0x0000FFB2 */
   82:  /* Tip for register initialization in the user code:  const byte NVBACKKEY2_INIT @0x0000FFB2 = <NVBACKKEY2_INITVAL>; */
   83:  /* NVBACKKEY3 - macro for reading non volatile register    Backdoor Comparison Key 3; 0x0000FFB3 */
   84:  /* Tip for register initialization in the user code:  const byte NVBACKKEY3_INIT @0x0000FFB3 = <NVBACKKEY3_INITVAL>; */
   85:  /* NVBACKKEY4 - macro for reading non volatile register    Backdoor Comparison Key 4; 0x0000FFB4 */
   86:  /* Tip for register initialization in the user code:  const byte NVBACKKEY4_INIT @0x0000FFB4 = <NVBACKKEY4_INITVAL>; */
   87:  /* NVBACKKEY5 - macro for reading non volatile register    Backdoor Comparison Key 5; 0x0000FFB5 */
   88:  /* Tip for register initialization in the user code:  const byte NVBACKKEY5_INIT @0x0000FFB5 = <NVBACKKEY5_INITVAL>; */
   89:  /* NVBACKKEY6 - macro for reading non volatile register    Backdoor Comparison Key 6; 0x0000FFB6 */
   90:  /* Tip for register initialization in the user code:  const byte NVBACKKEY6_INIT @0x0000FFB6 = <NVBACKKEY6_INITVAL>; */
   91:  /* NVBACKKEY7 - macro for reading non volatile register    Backdoor Comparison Key 7; 0x0000FFB7 */
   92:  /* Tip for register initialization in the user code:  const byte NVBACKKEY7_INIT @0x0000FFB7 = <NVBACKKEY7_INITVAL>; */
   93:  /* NVPROT - macro for reading non volatile register        Nonvolatile FLASH Protection Register; 0x0000FFBD */
   94:  /* Tip for register initialization in the user code:  const byte NVPROT_INIT @0x0000FFBD = <NVPROT_INITVAL>; */
   95:  /* NVOPT - macro for reading non volatile register         Nonvolatile Flash Options Register; 0x0000FFBF */
   96:  /* Tip for register initialization in the user code:  const byte NVOPT_INIT @0x0000FFBF = <NVOPT_INITVAL>; */
   97:  
   98:  
   99:  /* * * * *  16-BIT REGISTERS  * * * * * * * * * * * * * * * */
  100:  volatile ADCRSTR _ADCR;                                    /* Data Result Register; 0x00000012 */
  101:  volatile ADCCVSTR _ADCCV;                                  /* Compare Value Register; 0x00000014 */
  102:  volatile SCIBDSTR _SCIBD;                                  /* SCI Baud Rate Register; 0x00000020 */
  103:  volatile TPMCNTSTR _TPMCNT;                                /* TPM Timer Counter Register; 0x00000041 */
  104:  volatile TPMMODSTR _TPMMOD;                                /* TPM Timer Counter Modulo Register; 0x00000043 */
  105:  volatile TPMC0VSTR _TPMC0V;                                /* TPM Timer Channel 0 Value Register; 0x00000046 */
  106:  volatile TPMC1VSTR _TPMC1V;                                /* TPM Timer Channel 1 Value Register; 0x00000049 */
  107:  volatile SDIDSTR _SDID;                                    /* System Device Identification Register; 0x00001806 */
  108:  volatile DBGCASTR _DBGCA;                                  /* Debug Comparator A Register; 0x00001810 */
  109:  volatile DBGCBSTR _DBGCB;                                  /* Debug Comparator B Register; 0x00001812 */
  110:  volatile DBGFSTR _DBGF;                                    /* Debug FIFO Register; 0x00001814 */
  111:  
  112:  /*lint -restore */
  113:  
  114:  /* EOF */
  115:  
